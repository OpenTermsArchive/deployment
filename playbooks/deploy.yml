---
- name: Deploy Open Terms Archive applications
  hosts: all
  vars:
    chromium_required: ota_apps_config['@opentermsarchive/engine'] is defined
    mongo_required: >
      (ota_apps_config['@opentermsarchive/engine'].recorder.versions.storage.type is defined and ota_apps_config['@opentermsarchive/engine'].recorder.versions.storage.type == 'mongo') or
      (ota_apps_config['@opentermsarchive/engine'].recorder.snapshots.storage.type is defined and ota_apps_config['@opentermsarchive/engine'].recorder.snapshots.storage.type == 'mongo')
    skip_debian_arm: ansible_distribution != 'Debian' or (ansible_distribution == 'Debian' and ansible_facts['architecture'] != 'aarch64') # Skip Debian 11 with ARM architecture as it is not currently supported by MongoDB; see https://www.mongodb.com/docs/manual/installation/#supported-platforms
    
  tasks:
    - name: Load OTA applications configs
      ansible.builtin.include_role:
        name: ota/apps
        public: true # ensure that the role's variables and defaults are accessible to the play
      vars:
        ota_apps_read_config_only: true

    - name: Install infrastructure
      block:
      become: true
      tags: [infrastructure]
      - name: Install Node
        ansible.builtin.include_role:
          name: node
      
      - name: Install PM2
        ansible.builtin.include_role:
          name: pm2/install

      - name: Install Chromium
        ansible.builtin.include_role:
          name: chromium
        when: chromium_required

      - name: Install Nginx 
        ansible.builtin.include_role:
          name: nginx/install
    
      - name: Install Mongo
        ansible.builtin.include_role:
          name: mongo/install
        when:
          - mongo_condition
          - skip_debian_arm

    - name: Configure Mongo
      ansible.builtin.include_role:
        name: mongo/configure
        apply:
          become: true
      when:
        - mongo_condition
        - skip_debian_arm
  
    - name: Setup OTA snapshots and versions databases
      ansible.builtin.include_role:
        name: ota/database
      when:
        - ota_apps_config['@opentermsarchive/engine'].recorder.versions.storage.git.repository is defined or
          ota_apps_config['@opentermsarchive/engine'].recorder.snapshots.storage.git.repository is defined

    - name: Setup OTA applications
      ansible.builtin.include_role:
        name: ota/apps

    - name: Start OTA applications
      ansible.builtin.include_role:
        name: pm2/manage

    - name: Configure NGINX
      ansible.builtin.include_role:
        name: nginx/configure
        apply:
          become: true
      vars:
        ota_nginx_config_template: ./templates/nginx.conf.j2
        ota_nginx_reverse_proxy_config_template: ./templates/nginx-reverse-proxy-conf.j2
