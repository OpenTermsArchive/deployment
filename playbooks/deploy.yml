---
- name: Deploy Open Terms Archive applications
  hosts: all
  tasks:
    - name: Load OTA applications configs
      ansible.builtin.include_role:
        name: ota/apps
        public: true # ensure that the role's variables and defaults are accessible to the play
      vars:
        ota_apps_read_config_only: true

    - name: Set required variables
      set_fact:
        chromium_required: "{{ ota_apps_config['@opentermsarchive/engine'] is defined }}"
        # Skip Debian 11 with ARM architecture as it is not currently supported by MongoDB; see https://www.mongodb.com/docs/manual/installation/#supported-platforms
        mongo_required:
          "{{ 
            (ansible_distribution != 'Debian' or (ansible_distribution == 'Debian' and ansible_facts['architecture'] != 'aarch64')) 
            and (
              (ota_apps_config['@opentermsarchive/engine'].recorder.versions.storage.type is defined and ota_apps_config['@opentermsarchive/engine'].recorder.versions.storage.type == 'mongo') 
              or
              (ota_apps_config['@opentermsarchive/engine'].recorder.snapshots.storage.type is defined and ota_apps_config['@opentermsarchive/engine'].recorder.snapshots.storage.type == 'mongo')
            ) | bool 
          }}"
        
        snapshots_repository: "{{ ota_apps_config['@opentermsarchive/engine'].recorder.snapshots.storage.git.repository | default(None) }}"
        snapshots_relative_path: "{{ ota_apps_config['@opentermsarchive/engine'].recorder.snapshots.storage.git.path | default(None) }}"
        
        versions_repository: "{{ ota_apps_config['@opentermsarchive/engine'].recorder.versions.storage.git.repository | default(None) }}"
        versions_relative_path: "{{ ota_apps_config['@opentermsarchive/engine'].recorder.versions.storage.git.path | default(None) }}"
        
        collection_api_basePath: "{{ ota_apps_config['@opentermsarchive/engine']['collection-api'].basePath is defined and ota_apps_config['@opentermsarchive/engine']['collection-api'].basePath }}"
        collection_api_port: "{{ ota_apps_config['@opentermsarchive/engine']['collection-api'].port is defined and ota_apps_config['@opentermsarchive/engine']['collection-api'].port }}"
        
        federation_api_basePath: "{{ ota_apps_config['@opentermsarchive/federation-api'].basePath is defined and ota_apps_config['@opentermsarchive/federation-api'].basePath }}"
        federation_api_port: "{{ ota_apps_config['@opentermsarchive/federation-api'].port is defined and ota_apps_config['@opentermsarchive/federation-api'].port }}"
    
    - name: Install infrastructure
      become: true
      tags: [infrastructure]
      block:
        - name: Install Node
          ansible.builtin.include_role:
            name: node
        
        - name: Install PM2
          ansible.builtin.include_role:
            name: pm2/install

        - name: Install Chromium
          ansible.builtin.include_role:
            name: chromium
          when: chromium_required

        - name: Install Nginx 
          ansible.builtin.include_role:
            name: nginx/install
      
        - name: Install Mongo
          ansible.builtin.include_role:
            name: mongo/install
          when:
            - mongo_required

    - name: Configure Mongo
      ansible.builtin.include_role:
        name: mongo/configure
        apply:
          become: true
      when:
        - mongo_required
  
    - name: Setup Git-based versions database
      ansible.builtin.include_role:
        name: ota/git_database
      vars:
        ota_git_database_repository: "{{ versions_repository }}"
        ota_git_database_directory: "/home/{{ ansible_user }}/{{ ota_directory }}/{{ versions_relative_path }}"
        ota_git_database_branch: main
      when:
        - versions_repository and versions_relative_path

    - name: Setup Git-based snapshots database
      ansible.builtin.include_role:
        name: ota/git_database
      vars:
        ota_git_database_repository: "{{ snapshots_repository }}"
        ota_git_database_directory: "/home/{{ ansible_user }}/{{ ota_directory }}/{{ snapshots_relative_path }}"
        ota_git_database_branch: main
      when:
        - snapshots_repository and snapshots_relative_path

    - name: Setup OTA applications
      ansible.builtin.include_role:
        name: ota/apps

    - name: Start OTA applications
      ansible.builtin.include_role:
        name: pm2/manage

    - name: Configure NGINX
      ansible.builtin.include_role:
        name: nginx/configure
        apply:
          become: true
      vars:
        ota_nginx_config_template: ./templates/nginx.conf.j2
        ota_nginx_reverse_proxy_config_template: ./templates/nginx-reverse-proxy-conf.j2
