- name: Clone federated API repository
  ansible.builtin.git:
    repo: '{{ ota_federated_api_repo }}'
    dest: '/home/{{ ansible_user }}/{{ ota_federated_api_directory }}'
    version: '{{ ota_federated_api_branch }}'
    force: true
    key_file: '/home/{{ ansible_user }}/.ssh/ota-github-bot-key'
    depth: 1

- name: Read the production config
  shell: cat '/home/{{ ansible_user }}/{{ ota_federated_api_directory }}/config/production.json'
  register: read_config
      
- name: Save production config data into a variable
  set_fact: 
    ota_federated_api_app_config: "{{ read_config.stdout | from_json }}"

- name: Install dependencies
  ansible.builtin.command:
    cmd: npm ci
    chdir: '/home/{{ ansible_user }}/{{ ota_federated_api_directory }}'

- name: Add .env file
  ansible.builtin.template:
    src: .env
    dest: '/home/{{ ansible_user }}/{{ ota_federated_api_directory }}/.env'
    force: true
    mode: "644"

- name: Add pm2 config file
  ansible.builtin.copy:
    src: pm2.config.cjs
    dest: '/home/{{ ansible_user }}/{{ ota_federated_api_directory }}/pm2.config.cjs'
    mode: "644"

- name: Stop federated API
  ansible.builtin.command:
    cmd: pm2 stop pm2.config.cjs
    chdir: '/home/{{ ansible_user }}/{{ ota_federated_api_directory }}'
  tags:
    - stop

- name: Add conf in NGINX sites-available
  become: true
  ansible.builtin.template:
    src: nginx-conf.j2
    dest: '/etc/nginx/sites-available/ota'
    force: true
    mode: "644"
  notify: Restart NGINX

- name: Link conf from sites-available to sites-enabled
  become: true
  ansible.builtin.file:
    src: '/etc/nginx/sites-available/ota'
    dest: '/etc/nginx/sites-enabled/ota'
    state: link
    force: true
  notify: Restart NGINX

- name: Start federated API
  ansible.builtin.command:
    cmd: pm2 startOrRestart pm2.config.cjs
    chdir: '/home/{{ ansible_user }}/{{ ota_federated_api_directory }}'
  environment:
    NODE_ENV: production
  tags:
    - restart
    - start
